<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="Igor-Soto.local" name="UserServiceSpec" tests="1" errors="0" failures="1" skipped="0" time="0.018" timestamp="2019-11-12T11:50:29">
                     <properties>
      <property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/><property name="java.specification.version" value="11"/><property name="sun.cpu.isalist" value=""/><property name="sun.jnu.encoding" value="UTF-8"/><property name="sun.arch.data.model" value="64"/><property name="sbt.supershell" value="false"/><property name="java.vendor.url" value="https://www.jetbrains.com/"/><property name="sun.boot.library.path" value="/Applications/IntelliJ IDEA CE.app/Contents/jbr/Contents/Home/lib"/><property name="sun.java.command" value="/Users/igorsoto/Library/Application Support/IdeaIC2019.2/Scala/launcher/sbt-launch.jar --addPluginSbtFile=/private/var/folders/1k/hth47p9n2pz380n5c8n7spj80000gn/T/idea.sbt ; set ideaPort in Global := 51335 ; idea-shell"/><property name="jdk.debug" value="release"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2019-07-16"/><property name="java.home" value="/Applications/IntelliJ IDEA CE.app/Contents/jbr/Contents/Home"/><property name="file.separator" value="/"/><property name="java.vm.compressedOopsMode" value="Zero based"/><property name="line.separator" value="
"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="11.0.4+10-b304.77"/><property name="user.name" value="igorsoto"/><property name="log4j.ignoreTCL" value="true"/><property name="file.encoding" value="UTF-8"/><property name="java.io.tmpdir" value="/var/folders/1k/hth47p9n2pz380n5c8n7spj80000gn/T/"/><property name="java.version" value="11.0.4"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/><property name="sun.os.patch.level" value="unknown"/><property name="java.library.path" value="/Users/igorsoto/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/><property name="java.vendor" value="JetBrains s.r.o"/><property name="sun.io.unicode.encoding" value="UnicodeBig"/><property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="gopherProxySet" value="false"/><property name="java.class.path" value="/Users/igorsoto/Library/Application Support/IdeaIC2019.2/Scala/launcher/sbt-launch.jar"/><property name="java.vm.vendor" value="JetBrains s.r.o"/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="America/Sao_Paulo"/><property name="os.name" value="Mac OS X"/><property name="java.vm.specification.version" value="11"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="user.country" value="US"/><property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="/Users/igorsoto"/><property name="user.language" value="en"/><property name="swoval.tmpdir" value="/Users/igorsoto/.sbt/1.0"/><property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/><property name="jline.esc.timeout" value="0"/><property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="path.separator" value=":"/><property name="os.version" value="10.15.1"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="java.vendor.url.bug" value="https://youtrack.jetbrains.com"/><property name="user.dir" value="/Users/igorsoto/source/pocs/cake_pattern"/><property name="os.arch" value="x86_64"/><property name="idea.managed" value="true"/><property name="java.vm.info" value="mixed mode"/><property name="java.vm.version" value="11.0.4+10-b304.77"/><property name="java.class.version" value="55.0"/>
    </properties>
                     <testcase classname="UserServiceSpec" name="authenticate should call repository once" time="0.018">
                                                 <failure message="Unsatisfied expectation:

Expected:
inAnyOrder {
  &lt;mock-1&gt; UserRepository.authenticate(User(test,test)) twice (called once - UNSATISFIED)
}

Actual:
  &lt;mock-1&gt; UserRepository.authenticate(User(test,test))" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: Unsatisfied expectation:

Expected:
inAnyOrder {
  &lt;mock-1&gt; UserRepository.authenticate(User(test,test)) twice (called once - UNSATISFIED)
}

Actual:
  &lt;mock-1&gt; UserRepository.authenticate(User(test,test))
	at org.scalamock.scalatest.AbstractMockFactory.newExpectationException(AbstractMockFactory.scala:51)
	at org.scalamock.scalatest.AbstractMockFactory.newExpectationException$(AbstractMockFactory.scala:50)
	at UserServiceSpec.newExpectationException(UserServiceSpec.scala:16)
	at UserServiceSpec.newExpectationException(UserServiceSpec.scala:16)
	at org.scalamock.context.MockContext.reportUnsatisfiedExpectation(MockContext.scala:45)
	at org.scalamock.context.MockContext.reportUnsatisfiedExpectation$(MockContext.scala:44)
	at UserServiceSpec.reportUnsatisfiedExpectation(UserServiceSpec.scala:16)
	at org.scalamock.MockFactoryBase.verifyExpectations(MockFactoryBase.scala:108)
	at org.scalamock.MockFactoryBase.withExpectations(MockFactoryBase.scala:56)
	at org.scalamock.MockFactoryBase.withExpectations$(MockFactoryBase.scala:47)
	at UserServiceSpec.withExpectations(UserServiceSpec.scala:16)
	at org.scalamock.scalatest.AbstractMockFactory.withFixture(AbstractMockFactory.scala:34)
	at org.scalamock.scalatest.AbstractMockFactory.withFixture$(AbstractMockFactory.scala:31)
	at UserServiceSpec.withFixture(UserServiceSpec.scala:16)
	at org.scalatest.FlatSpecLike.invokeWithFixture$1(FlatSpecLike.scala:1680)
	at org.scalatest.FlatSpecLike.$anonfun$runTest$1(FlatSpecLike.scala:1692)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FlatSpecLike.runTest(FlatSpecLike.scala:1692)
	at org.scalatest.FlatSpecLike.runTest$(FlatSpecLike.scala:1674)
	at org.scalatest.FlatSpec.runTest(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.$anonfun$runTests$1(FlatSpecLike.scala:1750)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:396)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:373)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:410)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FlatSpecLike.runTests(FlatSpecLike.scala:1750)
	at org.scalatest.FlatSpecLike.runTests$(FlatSpecLike.scala:1749)
	at org.scalatest.FlatSpec.runTests(FlatSpec.scala:1685)
	at org.scalatest.Suite.run(Suite.scala:1147)
	at org.scalatest.Suite.run$(Suite.scala:1129)
	at org.scalatest.FlatSpec.org$scalatest$FlatSpecLike$$super$run(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.$anonfun$run$1(FlatSpecLike.scala:1795)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FlatSpecLike.run(FlatSpecLike.scala:1795)
	at org.scalatest.FlatSpecLike.run$(FlatSpecLike.scala:1793)
	at org.scalatest.FlatSpec.run(FlatSpec.scala:1685)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507)
	at sbt.TestRunner.runTest$1(TestFramework.scala:139)
	at sbt.TestRunner.run(TestFramework.scala:154)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:317)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:277)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:317)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:317)
	at sbt.TestFunction.apply(TestFramework.scala:329)
	at sbt.Tests$.$anonfun$toTask$1(Tests.scala:311)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(Transform.scala:46)
	at sbt.std.Transform$$anon$4.work(Transform.scala:67)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:281)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:19)
	at sbt.Execute.work(Execute.scala:290)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:281)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:37)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
</failure>
                                               </testcase>
                     <system-out><![CDATA[]]></system-out>
                     <system-err><![CDATA[]]></system-err>
                   </testsuite>